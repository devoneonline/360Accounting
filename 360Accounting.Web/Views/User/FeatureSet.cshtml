@Html.DevExpress().GetScripts(new Script { ExtensionSuite = ExtensionSuite.GridView })

@model _360Accounting.Web.Models.FeatureSetListModel
@{
    ViewBag.Title = "Manage FeatureSet";
}
<div class="container">
    <div class="clearfix">
        <div class="col-lg-12">
            <h3 class="page-header">
                @ViewBag.Title
            </h3>
        </div>
    </div>

    <div class="form-group col-lg-12">
        <input type="button" value="Create New" class="btn btn-default tstyCus-btn" id="btnNew" />
    </div>

    <div class="col-lg-12 cusGridWrapper">
        @{
            if (Model.FeatureSet != null)
            {
                if (Model.FeatureSet.Count > 0)
                {
                    Html.DevExpress().GetStyleSheets(new StyleSheet { ExtensionSuite = ExtensionSuite.GridView, Theme = "Office2010Black" },
                    new StyleSheet { ExtensionSuite = ExtensionSuite.Editors, Theme = "Office2010Black" },
                    new StyleSheet { ExtensionSuite = ExtensionSuite.NavigationAndLayout, Theme = "Office2010Black" });

                    Html.EnableClientValidation();
                    Html.EnableUnobtrusiveJavaScript();

                    var grid = Html.DevExpress().GridView(settings =>
                    {
                        settings.Name = "FeatureSet";
                        settings.Theme = "Office2010Black";
                        settings.KeyFieldName = "Id";

                        settings.CallbackRouteValues = new { Controller = "Account", Action = "FeatureSetListPartial" };

                        settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;
                        settings.SettingsBehavior.ConfirmDelete = true;

                        settings.SettingsPager.Visible = true;
                        settings.Settings.ShowGroupPanel = false;
                        settings.Settings.ShowFilterRow = false;
                        settings.SettingsBehavior.AllowSort = false;
                        settings.SettingsBehavior.AllowSelectByRowClick = true;

                        settings.Columns.Add(column =>
                            {
                                column.SetDataItemTemplateContent(c =>
                                {
                                    ViewContext.Writer.Write(
                                        Html.Raw("<a href='" + Url.Content("~/User/EditCompanyFeatureList/") + DataBinder.Eval(c.DataItem, "Id") + "'><i class='fa fa-edit'></i></a>")
                                        + "&nbsp;&nbsp;" +
                                        Html.Raw("<a class='deleteQuestion' href='" + Url.Content("~/User/DeleteFeatureSet/") + DataBinder.Eval(c.DataItem, "Id") + "'><i class='fa fa-trash-o'></i></a>")
                                        + "&nbsp;&nbsp;" +
                                        Html.Raw("<a title='Add Users' href='showCompanyUsers(" + DataBinder.Eval(c.DataItem, "Id") + ");'><i class='fa fa-users'></i></a>")
                                    );
                                });
                                column.Settings.AllowDragDrop = DefaultBoolean.False;
                                column.Settings.AllowSort = DefaultBoolean.False;
                                column.Width = 70;
                            });

                        settings.Columns.Add("Name", "Feature Type");
                        settings.Columns.Add("AccessType", "Access Level");
                    });
                    if (ViewData["EditError"] != null)
                    {
                        grid.SetEditErrorText((string)ViewData["EditError"]);
                    }
                    grid.Bind(Model.FeatureSet).GetHtml();
                }
            }
        }
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $('.deleteQuestion').click(function () {
            return confirm("Sure! you wanted to delete ?");
        });

        $('#btnNew').click(function () {
            window.location.href = '@Url.Content("~/User/CreateCompanyFeatureList")';
        });

        function showCompanyUsers(received) {
            $.ajax({
                url: '@Url.Content("~/User/UserFeatureSet")',
                data: {
                    featureSetId: received
                },
                datatype: 'html',
                type: 'get',
                error: function (data) { },
                success: function (data) {
                    $('#FeatureSetContainer').hide();
                    $('#UserListPopup').empty().html(data);
                }
            })
        }

        function SaveUsers() {
            $('#FeatureSetContainer').show();
            $('#UserListContainer').hide();
            var featureSetId = $('#featureSetId').val();
            var userList = '';

            $('.cboxUsers:checked').each(function (index, item) {
                userList += '±' + $(item).attr('data-id');
            })

            var url = '@Url.Content("~/User/SaveFSforUsers")';
            $.post(url, { featureSetId: featureSetId, userList: userList }, function (result) {
                window.location.href = '@Url.Content("~/User/FeatureSet")';
            });
        }

        function CancelUsers() {
            $('#FeatureSetContainer').show();
            $('#UserListContainer').hide();
        }
    });
</script>
