@Html.DevExpress().GetStyleSheets(new StyleSheet { ExtensionSuite = ExtensionSuite.GridView })
@Html.DevExpress().GetScripts(new Script { ExtensionSuite = ExtensionSuite.GridView })

@model _360Accounting.Web.Models.PayableInvoiceModel

@{
    ViewBag.Title = "Payable Invoice";
}

<div class="container">
    @using (Html.BeginForm())
    {
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.SOBId)
        @Html.HiddenFor(model => model.PeriodId)
        @Html.HiddenFor(model => model.CompanyId)
        @Html.HiddenFor(model => model.CreateBy)
        @Html.HiddenFor(model => model.CreateDate)
        @Html.HiddenFor(model => model.UpdateBy)
        @Html.HiddenFor(model => model.UpdateDate)

        <div class="row">
            <div class="col-lg-12">
                <div class="navbar-left">
                    SOB: @ViewBag.SOBName / Period: @ViewBag.PeriodName
                </div>
                <div class="navbar-right">
                    <input type="button" value="Save" id="btnSave" class="btn btn-default tstyCus-btn" />
                    <input type="button" value="Cancel" id="btnCancel" class="btn btn-default tstyCus-btn" />
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-2">
                <div class="form-group">
                    @Html.LabelFor(model => model.InvoiceNo)
                    @Html.TextBoxFor(model => model.InvoiceNo, new { @readonly = "readonly", @class = "form-control" })
                </div>
            </div>
            <div class="col-lg-2">
                <div class="form-group">
                    @Html.LabelFor(model => model.InvoiceTypes)
                    @Html.DropDownListFor(model => model.InvoiceTypeId, Model.InvoiceTypes, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-lg-2">
                <div class="form-group">
                    @Html.LabelFor(model => model.InvoiceDate)
                    @Html.EditorFor(model => model.InvoiceDate)
                </div>
            </div>
            <div class="col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Remarks)
                    @Html.TextAreaFor(model => model.Remarks, new { @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.Vendors)
                    @Html.DropDownListFor(model => model.VendorId, Model.Vendors, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-lg-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.VendorSites)
                    @Html.DropDownListFor(model => model.VendorSiteId, Model.VendorSites, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-lg-2">
                <div class="form-group">
                    @Html.LabelFor(model => model.WHTaxes)
                    @Html.DropDownListFor(model => model.WHTaxId, Model.WHTaxes, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-lg-2">
                <div class="form-group">
                    @Html.LabelFor(model => model.Status)
                    @Html.TextBoxFor(model => model.Status, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-lg-2">
                <div class="form-group">
                    @Html.LabelFor(model => model.Amount)
                    @Html.TextBoxFor(model => model.Amount, new { @readonly = "readonly", @class = "form-control" })
                </div>
            </div>
        </div>
        
        <div class="row">
            <div class="col-lg-12">
                @Html.Partial("_Detail", Model.InvoiceDetail)
            </div>
        </div>
    }
</div>

<script type="text/javascript">
    $(document).ready(function () {
        jQuery.ajaxSetup({ async: false });
        $('#InvoiceDate').attr('class', 'form-control');

        $('#InvoiceDate').change(function () {
            $.ajax({
                url: '@Url.Content("~/PayableInvoice/CheckDate")',
                data: { invoiceDate: $(this).val(), periodId: $('#PeriodId').val() },
                type: 'post',
                datatype: 'json',
                success: function (data) {
                    if (data)
                        $('#btnSave').attr('disabled', false);
                    else {
                        alert('Date must lie in the range of current period.');
                        $('#InvoiceDate').focus();
                        $('#btnSave').attr('disabled', true);
                    }
                },
                error: function () { }
            })
        })

        $('#VendorId').change(function () {
            var url = '@Url.Content("~/PayableInvoice/VendorSiteList")';
            var url2 = '@Url.Content("~/PayableInvoice/WHTaxList")';

            $.get(url, { vendorId: $(this).val() },
                function (data) {
                    var vendorSiteDropdown = $('#VendorSiteId');
                    vendorSiteDropdown.empty();
                    for (var i = 0; i < data.length; i++) {
                        vendorSiteDropdown.append('<option value=' + data[i].Value + '>' + data[i].Text + '</option>');
                    }

                    $.get(url2, { vendorId: $(this).val(), vendorSiteId: data[0].value },
                        function (data) {
                            var whTaxDropdown = $('#WHTaxId');
                            whTaxDropdown.empty();
                            for (var i = 0; i < data.length; i++) {
                                whTaxDropdown.append('<option value=' + data[i].Value + '>' + data[i].Text + '</option>');
                            }
                        });
                });  
        });

        $('#VendorSiteId').change(function () {
            var url = '@Url.Content("~/PayableInvoice/WithHoldingTaxList")';

            $.get(url, { vendorId: $('#VendorId').val(), vendorSiteId: $(this).val() },
                function (data) {
                    var whTaxDropdown = $('#WHTaxId');
                    whTaxDropdown.empty();
                    for (var i = 0; i < data.length; i++) {
                        whTaxDropdown.append('<option value=' + data[i].Value + '>' + data[i].Text + '</option>');
                    }
                });
        });

        $('#btnCancel').click(function () {
            if (confirm('Do you want to leave this page?')) {
                window.location.href = '@Url.Content("~/PayableInvoice")';
            }
        });

        $('#btnSave').click(function () {

            var invoiceTypeId = $('#InvoiceTypeId').val();
            var invoiceDate = $('#InvoiceDate').val();
            var remarks = $('#Remarks').val();
            var vendorId = $('#VendorId').val();
            var vendorSiteId = $('#VendorSiteId').val();
            var whTaxId = $('#WHTaxId').val();
            var amount = $('#Amount').val();
            var status = $('#Status').val();

            var url = '@Url.Content("~/PayableInvoice/SaveInvoice")';
            $.post(url, {
                invoiceTypeId: invoiceTypeId, invoiceDate: invoiceDate,
                remarks: remarks, vendorId: vendorId,
                vendorSiteId: vendorSiteId, whTaxId: whTaxId,
                amount: amount, status: status
            },
                function (result) {
                    if (result.success) {
                        alert(result.message);
                        window.location.href = '@Url.Content("~/PayableInvoice")';
                    }
                    else
                        alert(result.message);
                });
        });
    });
</script>

