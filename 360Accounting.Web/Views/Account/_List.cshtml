@model _360Accounting.Web.Models.AccountListModel

@{
    if (Model.Accounts != null)
    {
        if (Model.Accounts.Count() > 0)
        {
            var grid = new WebGrid(canSort: true, 
                                    rowsPerPage: 20, 
                                    ajaxUpdateContainerId: "dvAccountList", ajaxUpdateCallback: "CallBack");

            if (Model.Page == null) { grid.PageIndex = 0; } else { grid.PageIndex = Model.Page.Value - 1; }

            grid.Bind(Model.Accounts, rowCount: Model.TotalRecords, autoSortAndPage: false);
            
            <div class="col-sm-offset-10">
                @{ var startrow = (grid.RowsPerPage * grid.PageIndex) + 1;}
                @{ var endrow = (startrow + grid.Rows.Count - 1);}
                Displaying: <b>@startrow - @endrow</b>
                <br />
                TotalRecords <b>@grid.TotalRowCount</b>
            </div>
    
            @grid.GetHtml(tableStyle: "table table-bordered table-hover table-striped",
                            mode: WebGridPagerModes.All,
                            numericLinksCount: 10,
                            htmlAttributes: new { style = "width:100%", @class = "table", id="tblAccounts" },
                            columns:grid.Columns
                            (
                            grid.Column("", header: "Actions", style: "ActionLink",
                                                          format: (item) => Html.Raw("<a href='" + @Url.Content("~/Account/Delete/") + item.Id + "'><img src='" + @Url.Content("~/Content/images/delete.png") + "' alt='' title='Delete' style='border:0'/></a>&nbsp;&nbsp;|&nbsp;&nbsp;<a href='" + @Url.Content("~/Account/Edit/") + item.Id + "'><img src='" + @Url.Content("~/Content/images/edit.png") + "' alt='' title='Edit' style='border:0'/></a>")),
                            grid.Column(columnName: "SOBName",
                                            header: "Set Of Book",
                                            canSort: true),
                            grid.Column("Segments", header: "Segments", canSort: false),
                            grid.Column("SegmentsLength",header: "Segments Size", canSort:false)))
        }
        else
        {
            <div id='dvNoRecord'>No Record Found!</div>
        }
    }
}

<script type="text/javascript">
    function CallBack(context) {
        $("#dvAccountList")[0].innerHTML = context;
    }
</script>