@Html.DevExpress().GetScripts(new Script { ExtensionSuite = ExtensionSuite.GridView })

@model _360Accounting.Web.Models.CodeCombinitionListModel

@{
    if (Model.CodeCombinitions != null)
    {
        if (Model.CodeCombinitions.Count() > 0)
        {
            Html.DevExpress().GetStyleSheets(new StyleSheet { ExtensionSuite = ExtensionSuite.GridView, Theme = "Office2010Black" },
            new StyleSheet { ExtensionSuite = ExtensionSuite.Editors, Theme = "Office2010Black" },
            new StyleSheet { ExtensionSuite = ExtensionSuite.NavigationAndLayout, Theme = "Office2010Black" });

            var grid = Html.DevExpress().GridView(settings =>
            {
                settings.Name = "CodeCombinition";
                settings.Theme = "Office2010Black";
                settings.KeyFieldName = "Id";

                settings.CallbackRouteValues = new { Controller = "CodeCombinition", Action = "CodeCombinitionPartial" };

                settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;
                settings.SettingsBehavior.ConfirmDelete = true;

                settings.SettingsPager.Visible = true;
                settings.Settings.ShowGroupPanel = false;
                settings.Settings.ShowFilterRow = false;
                settings.SettingsBehavior.AllowSort = false;
                settings.SettingsBehavior.AllowSelectByRowClick = true;

                settings.Columns.Add(column =>
                {
                    column.Caption = "#";
                    column.SetDataItemTemplateContent(c =>
                    {
                        ViewContext.Writer.Write(
                            Html.Raw("<a href='#' onclick='EditCodeCombinition(" + DataBinder.Eval(c.DataItem, "Id") + ")'><i class='fa fa-edit'></i></a>")
                            + "&nbsp;" +
                            Html.Raw("<a class='deleteQuestion' href='" + Url.Content("~/CodeCombinition/Delete/") + DataBinder.Eval(c.DataItem, "Id") + "'><i class='fa fa-trash-o'></i></a>")
                        );
                    });
                    column.Settings.AllowDragDrop = DefaultBoolean.False;
                    column.Settings.AllowSort = DefaultBoolean.False;
                    column.Width = 70;
                });
                settings.Columns.Add("CodeCombinitionCode", "Code Combinition");
                settings.Columns.Add("StartDate").PropertiesEdit.DisplayFormatString = _360Accounting.Common.Const.DATE_FORMAT;
                settings.Columns.Add("EndDate").PropertiesEdit.DisplayFormatString = _360Accounting.Common.Const.DATE_FORMAT;
                settings.Columns.Add("AllowedPosting", "Allow Posting");
            });
            if (ViewData["EditError"] != null)
            {
                grid.SetEditErrorText((string)ViewData["EditError"]);
            }
            grid.Bind(Model.CodeCombinitions).GetHtml();
        }
        else
        {
            <div id='dvNoRecord'>No Record Found!</div>
        }
    }
}

<script type="text/javascript">
    function EditCodeCombinition(id) {
        $.ajax({
            url: '@Url.Content("~/CodeCombinition/Edit")',
            data: { id: id },
            datatype: 'html',
            type: 'post',
            error: function (error) { },
            success: function (data) {
                $('#dvInput').html(data);
                $('#dvInput').dialog("open");
                return false;
            }
        });
    }

    $(document).ready(function () {
        $('.deleteQuestion').click(function () {
            return confirm("Sure! you wanted to delete ?");
        });
    });

    function CallBack(context) {
        $("#dvCodeCombinitionList")[0].innerHTML = context;
    }
</script>