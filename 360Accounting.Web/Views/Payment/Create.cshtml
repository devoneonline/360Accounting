@Html.DevExpress().GetStyleSheets(new StyleSheet { ExtensionSuite = ExtensionSuite.GridView })
@Html.DevExpress().GetScripts(new Script { ExtensionSuite = ExtensionSuite.GridView })

@model _360Accounting.Web.Models.PaymentViewModel

@{
    ViewBag.Title = "Payment";
}

<div class="container">
    @using (Html.BeginForm())
    {
        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.SOBId)
        @Html.HiddenFor(m => m.CreateBy)
        @Html.HiddenFor(m => m.CreateDate)
        @Html.HiddenFor(m => m.UpdateBy)
        @Html.HiddenFor(m => m.UpdateDate)

        <div class="row">
            <div class="col-lg-12">
                <h3 class="page-header">
                    @ViewBag.Title
                </h3>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-12">
                <div class="navbar-right">
                    <input type="button" value="Save" id="btnSave" class="btn btn-default tstyCus-btn" />
                    <input type="button" value="Cancel" id="btnCancel" class="btn btn-default tstyCus-btn" />
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-2">
                <div class="form-group">
                    @Html.LabelFor(model => model.PaymentNo)
                    @Html.TextBoxFor(model => model.PaymentNo, new { @class = "form-control" })
                </div>
            </div>

            <div class="col-lg-3">
                <div class="form-group">
                    @Html.LabelFor(m => m.Period)
                    @Html.DropDownListFor(m => m.PeriodId, Model.Period, new { @class = "form-control criteria" })
                </div>
            </div>

            <div class="col-lg-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.PaymentDate)
                    @Html.EditorFor(model => model.PaymentDate)
                </div>
            </div>
            <div class="col-lg-4">
                <div class="form-group">
                    @Html.LabelFor(m => m.Vendor)
                    @Html.DropDownListFor(m => m.VendorId, Model.Vendor, new { @class = "form-control criteria" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.VendorSiteId)
                    @Html.DropDownListFor(model => model.VendorSiteId, Model.VendorSite, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-lg-4">
                <div class="form-group">
                    @Html.LabelFor(m => m.Bank)
                    @Html.DropDownListFor(m => m.BankId, Model.Bank, new { @class = "form-control criteria" })
                </div>
            </div>

            <div class="col-lg-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.BankAccountId)
                    @Html.DropDownListFor(model => model.BankAccountId, Model.BankAccount, new { @class = "form-control" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.Amount)
                    @Html.TextBoxFor(model => model.Amount, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-lg-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.Status)
                    @Html.DropDownListFor(model => model.Status,
                    new List<SelectListItem> {
                        new SelectListItem{
                            Text = "Open", Value = "Open"
                        },
                        new SelectListItem{
                            Text = "Close", Value = "Close"
                        } }, new { @class = "form-control" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-12">
                @Html.Partial("CreatePartial", Model.PaymentInvoiceLines)
            </div>
        </div>
        }
    </div>

<script type="text/javascript">
    $(document).ready(function () {
        $('#PaymentDate').attr('class', 'form-control');

        $('#PaymentDate').blur(function () {
            $.ajax({
                url: '@Url.Content("~/Payment/CheckPaymentDate")',
                data: { paymentDate: $(this).val(), periodId: $('#PeriodId').val() },
                type: 'post',
                datatype: 'json',
                success: function (data) {
                    if (!data) {
                        alert('Payment Date must lie in the range of current period.');
                        $('#PaymentDate').focus();
                        $('#btnSave').attr('disabled', true)
                    }
                    else
                        $('#btnSave').attr('disabled', false)
                },
                error: function () { }
            })
        })

        $('#btnCancel').click(function () {
            if (confirm('Do you want to leave this page?')) {
                window.location.href = '@Url.Content("~/Payment")';
            }
        });

        $('#PeriodId').change(function () {
            var url1 = '@Url.Content("~/Payment/GetDatabyPeriod")';

            $.get(url1, { periodid: $('#PeriodId').val() },
                function (data) {
                    var vendorDropdown = $('#VendorId');
                    vendorDropdown.empty();
                    var vendorSiteDropdown = $('#VendorSiteId');
                    vendorSiteDropdown.empty();
                    var bankDropdown = $('#BankId');
                    bankDropdown.empty();
                    var bankAccountDropdown = $('#BankAccountId');
                    bankAccountDropdown.empty();

                    
                    if (data.Vendor.length > 0) {
                        for (var i = 0; i < data.Vendor.length; i++) {
                            vendorDropdown.append('<option value=' + data.Vendor[i].Value + '>' + data.Vendor[i].Text + '</option>');
                        }

                        for (var i = 0; i < data.VendorSite.length; i++) {
                            vendorSiteDropdown.append('<option value=' + data.VendorSite[i].Value + '>' + data.VendorSite[i].Text + '</option>');
                        }
                    }

                    if (data.Bank.length > 0) {
                        for (var i = 0; i < data.Bank.length; i++) {
                            bankDropdown.append('<option value=' + data.Bank[i].Value + '>' + data.Bank[i].Text + '</option>');
                        }

                        for (var i = 0; i < data.BankAccount.length; i++) {
                            bankAccountDropdown.append('<option value=' + data.BankAccount[i].Value + '>' + data.BankAccount[i].Text + '</option>');
                        }
                    }
                });
        });

        $('#VendorId').change(function () {
            var url1 = '@Url.Content("~/Payment/VendorSiteList")';

            $.get(url1, {},
                function (data) {
                    var vendorDropdown = $('#VendorId');
                    vendorDropdown.empty();
                    for (var i = 0; i < data.length; i++) {
                        vendorDropdown.append('<option value=' + data[i].Value + '>' + data[i].Text + '</option>');
                    }
                });
        });

        $('#BankId').change(function () {
            var url1 = '@Url.Content("~/Payment/BankAccountList")';

            $.get(url1, {},
                function (data) {
                    var bankAccountDropdown = $('#BankAccountId');
                    bankAccountDropdown.empty();
                    for (var i = 0; i < data.length; i++) {
                        bankAccountDropdown.append('<option value=' + data[i].Value + '>' + data[i].Text + '</option>');
                    }
                });
        });

        $('#btnSave').click(function () {
            var model = {
                Id: $('#Id').val(),
                PaymentNo: $('#PaymentNo').val(),
                PaymentDate: $('#PaymentDate').val(),
                BankId: $('#BankId').val(),
                BankAccountId: $('#BankAccountId').val(),
                VendorId: $('#VendorId').val(),
                VendorSiteId: $('#VendorSiteId').val(),
                PeriodId: $('#PeriodId').val(),
                Amount: $('#Amount').val(),
                Status: $('#Status').val()
            };

            var url = '@Url.Content("~/Payment/SavePayment")';
            $.post(url, model,
                function (result) {
                    if (result.success)
                        window.location.href = '@Url.Content("~/Payment")';
                    else
                        alert(result.message);
                });
        });
    });
</script>