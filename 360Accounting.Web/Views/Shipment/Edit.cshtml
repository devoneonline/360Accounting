@Html.DevExpress().GetStyleSheets(new StyleSheet { ExtensionSuite = ExtensionSuite.GridView })
@Html.DevExpress().GetScripts(new Script { ExtensionSuite = ExtensionSuite.GridView })

@model _360Accounting.Web.Models.OrderShipmentModel

@{
    ViewBag.Title = "Shipment";
}

<div class="container">
    <div class="row">
        <div class="col-lg-12">
            <h3 class="page-header">
                @ViewBag.Title
            </h3>
        </div>
    </div>

    @using (Html.BeginForm())
    {
        @Html.HiddenFor(m => m.CreateBy)
        @Html.HiddenFor(m => m.CreateDate)
        @Html.HiddenFor(m => m.UpdateBy)
        @Html.HiddenFor(m => m.UpdateDate)
        @Html.HiddenFor(m => m.CompanyId)
        @Html.HiddenFor(m => m.DeliveryDate)

        <div class="row">
            <div class="col-lg-12">
                <div class="navbar-right">
                    <input type="button" value="Save" id="btnSave" class="btn btn-default tstyCus-btn" />
                    <input type="button" value="Cancel" id="btnCancel" class="btn btn-default tstyCus-btn" />
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-lg-2">
                <div class="form-group">
                    @Html.LabelFor(model => model.DeliveryNo)
                    @Html.TextBoxFor(model => model.DeliveryNo, new { @readonly = "readonly", @class = "form-control" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.OrderId)
                    @Html.DropDownListFor(model => model.OrderId, Model.Orders, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-lg-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.CustomerId)
                    @Html.DropDownListFor(model => model.CustomerId, Model.Customers, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-lg-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.CustomerSiteId)
                    @Html.DropDownListFor(model => model.CustomerSiteId, Model.CustomerSites, new { @class = "form-control" })
                </div>
            </div>
            <div class="col-lg-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.WarehouseId)
                    @Html.DropDownListFor(model => model.WarehouseId, Model.Warehouses, new { @class = "form-control" })
                </div>
            </div>
        </div>
    }
    <div class="row">
        <div id="dvDetail" class="col-lg-12">
            @Html.Action("DetailPartial")
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $('#OrderId').change(function () {
            jQuery.ajaxSetup({ async: false });
            GetCustomers($(this).val());
            RefreshDetail($('#CustomerId').val(), $('#CustomerSiteId').val(), $('#WarehouseId').val(), $('#OrderId').val());
        });

        $('#CustomerId').change(function () {
            jQuery.ajaxSetup({ async: false });
            if ($(this).val() > 0) {
                GetCustomerSites($(this).val())
            }
            else {
                var customerSiteDropdown = $('#CustomerSiteId');
                customerSiteDropdown.empty();
                customerSiteDropdown.append('<option value=0>-- Select --</option>');
                $('#CustomerSiteId').val(0);
            }
            RefreshDetail($('#CustomerId').val(), $('#CustomerSiteId').val(), $('#WarehouseId').val(), $('#OrderId').val());
        });

        $('#CustomerSiteId, #WarehouseId').change(function () {
            RefreshDetail($('#CustomerId').val(), $('#CustomerSiteId').val(), $('#WarehouseId').val(), $('#OrderId').val());
        });

        function GetCustomers(orderId) {
            $.ajax({
                url: '@Url.Content("~/Shipment/GetCustomers")',
                data: { orderId: orderId, deliveryDate: $('#DeliveryDate').val() },
                type: 'post',
                datatype: 'json',
                success: function (data) {
                    var customerDropdown = $('#CustomerId');
                    customerDropdown.empty();
                    for (var i = 0; i < data.length; i++) {
                        customerDropdown.append('<option value=' + data[i].Value + '>' + data[i].Text + '</option>');
                    }

                    $('#CustomerId').val(0);

                    var customerSiteDropdown = $('#CustomerSiteId');
                    customerSiteDropdown.empty();
                    customerSiteDropdown.append('<option value=0>-- Select --</option>');
                },
                error: function () { }
            })
        }

        function GetCustomerSites(customerId) {
            $.ajax({
                url: '@Url.Content("~/Shipment/GetCustomerSites")',
                data: { customerId: customerId },
                type: 'post',
                datatype: 'json',
                success: function (data) {
                    var customerSiteDropdown = $('#CustomerSiteId');
                    customerSiteDropdown.empty();
                    for (var i = 0; i < data.length; i++) {
                        customerSiteDropdown.append('<option value=' + data[i].Value + '>' + data[i].Text + '</option>');
                    }
                    $('#CustomerSiteId').val(0);
                },
                error: function () { }
            })
        }

        function RefreshDetail(customerId, customerSiteId, warehouseId, orderId) {
            customerId = customerId == null ? 0 : customerId;
            customerSiteId = customerSiteId == null ? 0 : customerSiteId;
            warehouseId = warehouseId == null ? 0 : warehouseId;
            orderId = orderId == null ? 0 : orderId;

            $.ajax({
                url: '@Url.Content("~/Shipment/DetailPartialParams")',
                data: {
                    warehouseId: warehouseId, customerId: customerId, customerSiteId: customerSiteId, orderId: orderId
                },
                type: 'post',
                datatype: 'json',
                success: function (data) {
                    $('#dvDetail').empty().html(data);
                },
                error: function () { }
            })
        }

        $('#btnCancel').click(function () {
            if ($('#isNew').val() == 'true') {
                if (confirm('Do you want to leave this page?')) {
                    window.location.href = '@Url.Content("~/Shipment")';
                }
            }
            else
                window.location.href = '@Url.Content("~/Shipment")';
        });

        $('#btnSave').click(function () {
            var warehouseId = $('#WarehouseId').val();
            var companyId = $('#CompanyId').val();
            var deliveryNo = $('#DeliveryNo').val();
            var deliveryDate = $('#DeliveryDate').val();

            var url = '@Url.Content("~/Shipment/Save")';
            $.post(url, {
                deliveryDate: deliveryDate, deliveryNo: deliveryNo, warehouseId: warehouseId, companyId: companyId
            },
                function (result) {
                    if (isNaN(result))
                        alert(result);
                    else
                        window.location.href = '@Url.Content("~/Shipment")';
                });
        });
    });
</script>