@model DevEx_360Accounting_Web.Models.SetOfBookListModel

@{
    ViewBag.Title = "Set Of Books";
}

<div class="row">
    <div class="col-lg-12">
        <h3 class="page-header">
            @ViewBag.Title
        </h3>
    </div>
</div>

<div class="form-group">
    <input type="button" value="Create New" class="btn btn-default" id="btnNew" />
</div>

@{
    if (Model.SetOfBooks != null)
    {
        if (Model.SetOfBooks.Count() > 0)
        {
            @*var grid = new WebGrid(canSort: true,
                    rowsPerPage: _360Accounting.Common.Utility.Configuration.GridRows);
                grid.Bind(Model.SetOfBooks);

                @grid.GetHtml(tableStyle: "table table-bordered table-hover table-striped",
                            mode: WebGridPagerModes.All,
                            numericLinksCount: 10,
                            htmlAttributes: new { style = "width:100%" },
                            columns: grid.Columns
                            (
                            grid.Column("", header: "Actions", style: "ActionLink",
                                                                  format: (item) => Html.Raw("<a class = 'delete' href='" + @Url.Content("~/SetOfBook/Delete/") + item.Id + "'><img src='" + @Url.Content("~/Content/images/delete.png") + "' alt='' title='Delete' style='border:0'/></a>&nbsp;&nbsp;|&nbsp;&nbsp;<a href='" + @Url.Content("~/SetOfBook/Edit/") + item.Id + "'><img src='" + @Url.Content("~/Content/images/edit.png") + "' alt='' title='Edit' style='border:0'/></a>")),
                            grid.Column("Name", header: "SOB Name", canSort: true)))*@

            Html.DevExpress().GetStyleSheets(new StyleSheet { ExtensionSuite = ExtensionSuite.GridView, Theme = "Office2010Black" },
            new StyleSheet { ExtensionSuite = ExtensionSuite.Editors, Theme = "Office2010Black" },
            new StyleSheet { ExtensionSuite = ExtensionSuite.NavigationAndLayout, Theme = "Office2010Black" });

            //Html.EnableClientValidation();
            //Html.EnableUnobtrusiveJavaScript();

            var grid = Html.DevExpress().GridView(settings =>
            {
                settings.Name = "SetOfBook";
                settings.Theme = "Office2010Black";
                settings.KeyFieldName = "Id";

                settings.CallbackRouteValues = new { Controller = "SetOfBook", Action = "List2" };

                settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "SetOfBook", Action = "List2AddNew" };
                settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "SetOfBook", Action = "List2Update" };
                settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "SetOfBook", Action = "List2Delete" };
                settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;
                settings.SettingsBehavior.ConfirmDelete = true;

                settings.CommandColumn.Visible = true;
                settings.CommandColumn.ShowNewButton = true;
                settings.CommandColumn.ShowDeleteButton = true;
                settings.CommandColumn.ShowEditButton = true;

                settings.SettingsPager.Visible = true;
                settings.Settings.ShowGroupPanel = true;
                settings.Settings.ShowFilterRow = true;
                settings.SettingsBehavior.AllowSelectByRowClick = true;

                settings.Columns.Add("Name", "SOB Name");
            });
            if (ViewData["EditError"] != null)
            {
                grid.SetEditErrorText((string)ViewData["EditError"]);
            }
            grid.Bind(Model.SetOfBooks).GetHtml();
        }
        else
        {
            <div id='dvNoRecord'>No Record Found!</div>
        }
    }
}
<script type="text/javascript">
    $(document).ready(function () {
        $('#btnNew').click(function () {
            window.location.href = '@Url.Content("~/SetOfBook/Create")';
        });

        $('.delete').click(function () {
            return confirm("Sure! you wanted to delete ?");
        });
    });
</script>
