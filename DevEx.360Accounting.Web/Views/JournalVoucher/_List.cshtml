@model DevEx_360Accounting_Web.Models.JournalVoucherListModel

@{
    if (Model.JournalVouchers != null)
    {
        if (Model.JournalVouchers.Count() > 0)
        {
            @*var grid = new WebGrid(canSort: true,
                                        rowsPerPage: 20,
                                        ajaxUpdateContainerId: "dvJournalVoucherList", ajaxUpdateCallback: "CallBack");

                if (Model.Page == null) { grid.PageIndex = 0; } else { grid.PageIndex = Model.Page.Value - 1; }

                grid.Bind(Model.JournalVouchers, rowCount: Model.TotalRecords, autoSortAndPage: false);

                <div class="col-sm-offset-10">
                    @{ var startrow = (grid.RowsPerPage * grid.PageIndex) + 1;}
                    @{ var endrow = (startrow + grid.Rows.Count - 1);}
                    Displaying: <b>@startrow - @endrow</b>
                    <br />
                    TotalRecords <b>@grid.TotalRowCount</b>
                </div>

                @grid.GetHtml(tableStyle: "table table-bordered table-hover table-striped",
                                mode: WebGridPagerModes.All,
                                numericLinksCount: 10,
                                htmlAttributes: new { style = "width:100%", @class = "table", id = "tblAccounts" },
                                columns: grid.Columns
                                (
                                grid.Column("", header: "Actions", style: "ActionLink",
                                                              format: (item) => Html.Raw("<a class = 'delete' href='" + @Url.Content("~/JournalVoucher/Delete/") + item.Id + "'><img src='" + @Url.Content("~/Content/images/delete.png") + "' alt='' title='Delete' style='border:0'/></a>&nbsp;&nbsp;|&nbsp;&nbsp;<a href='" + @Url.Content("~/JournalVoucher/Edit/") + item.Id + "'><img src='" + @Url.Content("~/Content/images/edit.png") + "' alt='' title='Edit' style='border:0'/></a>")),
                                grid.Column(columnName: "JournalName",
                                                header: "Journal Name",
                                                canSort: true),
                                grid.Column("DocumentNo", header: "Document #", canSort: false),
                                grid.Column("GLDate", header: "Effective Date", canSort: true),
                                grid.Column("Description", header: "Description", canSort: false)))*@

            Html.DevExpress().GetStyleSheets(new StyleSheet { ExtensionSuite = ExtensionSuite.GridView, Theme = "Office2010Black" },
            new StyleSheet { ExtensionSuite = ExtensionSuite.Editors, Theme = "Office2010Black" },
            new StyleSheet { ExtensionSuite = ExtensionSuite.NavigationAndLayout, Theme = "Office2010Black" });

            //Html.EnableClientValidation();
            //Html.EnableUnobtrusiveJavaScript();

            var grid = Html.DevExpress().GridView(settings =>
            {
                settings.Name = "JournalVoucher";
                settings.Theme = "Office2010Black";
                settings.KeyFieldName = "Id";

                settings.CallbackRouteValues = new { Controller = "JournalVoucher", Action = "List2" };

                settings.SettingsEditing.AddNewRowRouteValues = new { Controller = "JournalVoucher", Action = "List2AddNew" };
                settings.SettingsEditing.UpdateRowRouteValues = new { Controller = "JournalVoucher", Action = "List2Update" };
                settings.SettingsEditing.DeleteRowRouteValues = new { Controller = "JournalVoucher", Action = "List2Delete" };
                settings.SettingsEditing.Mode = GridViewEditingMode.PopupEditForm;
                settings.SettingsBehavior.ConfirmDelete = true;

                settings.CommandColumn.Visible = true;
                settings.CommandColumn.ShowNewButton = true;
                settings.CommandColumn.ShowDeleteButton = true;
                settings.CommandColumn.ShowEditButton = true;

                settings.SettingsPager.Visible = true;
                settings.Settings.ShowGroupPanel = true;
                settings.Settings.ShowFilterRow = true;
                settings.SettingsBehavior.AllowSelectByRowClick = true;

                settings.Columns.Add("JournalName", "Journal Name");
                settings.Columns.Add("DocumentNo", "Document #");
                settings.Columns.Add("GLDate", "Effective Date");
                settings.Columns.Add("Description");
            });
            if (ViewData["EditError"] != null)
            {
                grid.SetEditErrorText((string)ViewData["EditError"]);
            }

            grid.Bind(Model.JournalVouchers).GetHtml();
        }
        else
        {
            <div id='dvNoRecord'>No Record Found!</div>
        }
    }
}

<script type="text/javascript">
    $(document).ready(function () {
        $('.delete').click(function () {
            return confirm("Sure! you wanted to delete ?");
        });
    });

    function CallBack(context) {
        $("#dvJournalVoucherList")[0].innerHTML = context;
    }
</script>